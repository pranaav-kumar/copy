src/Components/Login.jsx
import React, { useState } from 'react';
import axios from 'axios';

export default function Login() {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [errors, setErrors] = useState({});

  const handleSubmit = async (e) => {
    e.preventDefault();
    const newErrors = {};

    if (!email.trim()) newErrors.email = 'Email is required';
    if (!password.trim()) newErrors.password = 'Password is required';

    setErrors(newErrors);
    if (Object.keys(newErrors).length > 0) return;

    try {
      await axios.post('/api/login', { email, password });
    } catch {
      setErrors({ general: 'Invalid credentials' });
    }
  };

  return (
    <div className="container mt-5 text-center">
      <h2>Login</h2>
      <form onSubmit={handleSubmit}>
        <div className="form-group mt-3">
          <input
            type="email"
            placeholder="Email"
            className="form-control"
            value={email}
            onChange={(e) => setEmail(e.target.value)}
          />
          {errors.email && <p className="text-danger">{errors.email}</p>}
        </div>

        <div className="form-group mt-3">
          <input
            type="password"
            placeholder="Password"
            className="form-control"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
          />
          {errors.password && <p className="text-danger">{errors.password}</p>}
        </div>

        <button type="submit" className="btn btn-primary mt-3">Login</button>
        {errors.general && <p className="text-danger">{errors.general}</p>}
      </form>
    </div>
  );
}

ðŸŸ© src/Components/Register.jsx
import React, { useState } from 'react';
import axios from 'axios';

export default function Register() {
  const [formData, setFormData] = useState({
    firstName: '',
    lastName: '',
    mobile: '',
    email: '',
    password: '',
    confirmPassword: ''
  });
  const [errors, setErrors] = useState({});

  const handleSubmit = (e) => {
    e.preventDefault();
    const newErrors = {};

    if (!formData.firstName.trim()) newErrors.firstName = 'First Name is required';
    if (!formData.lastName.trim()) newErrors.lastName = 'Last Name is required';
    if (!formData.mobile.trim()) newErrors.mobile = 'Mobile Number is required';
    if (!formData.email.match(/^[^@]+@[^@]+\.[^@]+$/))
      newErrors.email = 'Please enter a valid email address';
    if (formData.password.length < 6)
      newErrors.password = 'Password must be at least 6 characters';
    if (!formData.confirmPassword.trim())
      newErrors.confirmPassword = 'Confirm Password is required';

    setErrors(newErrors);
    if (Object.keys(newErrors).length > 0) return;

    axios.post('/api/register', formData);
  };

  return (
    <div className="container mt-5 text-center">
      <h2>Register for SavorStudio</h2>
      <form onSubmit={handleSubmit}>
        {['firstName', 'lastName', 'mobile', 'email', 'password', 'confirmPassword'].map((key) => (
          <div key={key} className="form-group mt-3">
            <input
              type={key.includes('password') ? 'password' : 'text'}
              placeholder={key.replace(/([A-Z])/g, ' $1')}
              className="form-control"
              value={formData[key]}
              onChange={(e) => setFormData({ ...formData, [key]: e.target.value })}
            />
            {errors[key] && <p className="text-danger">{errors[key]}</p>}
          </div>
        ))}
        <button type="submit" className="btn btn-success mt-3">Register</button>
      </form>
    </div>
  );
}

ðŸŸ¥ src/Components/ErrorPage.jsx
import React from 'react';

export default function ErrorPage() {
  return (
    <div className="container text-center mt-5">
      <h2>Something Went Wrong</h2>
      <p>We're sorry, but an error occurred. Please try again later.</p>
    </div>
  );
}

ðŸŸ¨ src/Viewers/DisplayTVShows.jsx
import React, { useState } from 'react';

export default function DisplayTVShows() {
  const [tvshows] = useState([]);
  const [sort, setSort] = useState('Sort by Title (A-Z)');

  return (
    <div className="container mt-5">
      <h2>TV Show Catalog</h2>
      <div className="d-flex justify-content-between my-3">
        <button className="btn btn-danger">Logout</button>
        <select
          value={sort}
          onChange={(e) => setSort(e.target.value)}
          className="form-select w-auto"
        >
          <option>Sort by Title (A-Z)</option>
          <option>Sort by Rating (High-Low)</option>
        </select>
      </div>

      <table className="table table-bordered">
        <thead>
          <tr>
            <th>Title</th>
            <th>Genre</th>
            <th>Status</th>
            <th>Progress</th>
            <th>Rating</th>
            <th>Action</th>
          </tr>
        </thead>
      </table>

      {tvshows.length === 0 && <p>No TV shows found</p>}
    </div>
  );
}

ðŸŸ¦ src/Admin/ManageTVShow.jsx
import React, { useState } from 'react';

export default function ManageTVShow() {
  const [status, setStatus] = useState('All Statuses');
  const [tvshows] = useState([]);

  return (
    <div className="container mt-5">
      <h2>Manage TV Shows</h2>
      <div className="d-flex justify-content-between my-3">
        <button className="btn btn-primary">Add TV Show</button>
        <button className="btn btn-danger">Logout</button>
      </div>

      <select
        value={status}
        onChange={(e) => setStatus(e.target.value)}
        className="form-select w-auto mb-3"
      >
        <option>All Statuses</option>
        <option>Ongoing</option>
        <option>Completed</option>
      </select>

      <table className="table table-bordered">
        <thead>
          <tr>
            <th>Title</th>
            <th>Genre</th>
            <th>Status</th>
            <th>Progress</th>
            <th>Rating</th>
            <th>Actions</th>
          </tr>
        </thead>
      </table>

      {tvshows.length === 0 && <p>No TV shows found</p>}
    </div>
  );
}

ðŸŸ§ src/Admin/CreateTVShow.jsx
import React, { useState } from 'react';

export default function CreateTVShow() {
  const [form, setForm] = useState({
    title: '',
    genre: '',
    status: '',
    totalEpisodes: '',
    watchedEpisodes: '',
    rating: ''
  });
  const [errors, setErrors] = useState({});

  const handleSubmit = (e) => {
    e.preventDefault();
    const errs = {};
    if (!form.title.trim()) errs.title = 'Title is required';
    if (!form.genre.trim()) errs.genre = 'Genre is required';
    if (!form.totalEpisodes || parseInt(form.totalEpisodes) < 1)
      errs.totalEpisodes = 'Total episodes must be at least 1';
    setErrors(errs);
    if (Object.keys(errs).length === 0) {
      console.log('Submitted:', form);
    }
  };

  return (
    <div className="container mt-5">
      <h2>Add TV Show</h2>
      <form onSubmit={handleSubmit}>
        <div className="form-group mt-3">
          <label>Title:</label>
          <input
            className="form-control"
            value={form.title}
            onChange={(e) => setForm({ ...form, title: e.target.value })}
          />
          {errors.title && <p className="text-danger">{errors.title}</p>}
        </div>

        <div className="form-group mt-3">
          <label>Genre:</label>
          <input
            className="form-control"
            value={form.genre}
            onChange={(e) => setForm({ ...form, genre: e.target.value })}
          />
          {errors.genre && <p className="text-danger">{errors.genre}</p>}
        </div>

        <div className="form-group mt-3">
          <label>Status:</label>
          <input
            className="form-control"
            value={form.status}
            onChange={(e) => setForm({ ...form, status: e.target.value })}
          />
        </div>

        <div className="form-group mt-3">
          <label>Total Episodes:</label>
          <input
            type="number"
            className="form-control"
            value={form.totalEpisodes}
            onChange={(e) => setForm({ ...form, totalEpisodes: e.target.value })}
          />
          {errors.totalEpisodes && <p className="text-danger">{errors.totalEpisodes}</p>}
        </div>

        <div className="form-group mt-3">
          <label>Watched Episodes:</label>
          <input
            type="number"
            className="form-control"
            value={form.watchedEpisodes}
            onChange={(e) => setForm({ ...form, watchedEpisodes: e.target.value })}
          />
        </div>

        <div className="form-group mt-3">
          <label>Rating (1-10, optional):</label>
          <input
            type="number"
            className="form-control"
            value={form.rating}
            onChange={(e) => setForm({ ...form, rating: e.target.value })}
          />
        </div>

        <button type="submit" className="btn btn-success mt-4">Add TV Show</button>
      </form>
    </div>
  );
}